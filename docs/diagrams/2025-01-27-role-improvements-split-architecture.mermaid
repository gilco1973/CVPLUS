graph TD
    %% Current vs New Flow Comparison
    subgraph "CURRENT FLOW (4 Steps)"
        A1[Step 1: Processing Your CV<br/>analysis] --> B1[Step 2: Role Detection<br/>role-detection]
        B1 --> C1[Step 3: Analysis Results<br/>improvements<br/>⚠️ COMBINES role selection + recommendations]
        C1 --> D1[Step 4: Feature Selection<br/>actions]
    end

    subgraph "NEW FLOW (5 Steps)"
        A2[Step 1: Processing Your CV<br/>analysis] --> B2[Step 2: Role Detection<br/>role-detection]
        B2 --> C2[Step 3: Role Selection<br/>role-selection<br/>✨ PURE role selection interface]
        C2 --> D2[Step 4: Improvements Selection<br/>improvements<br/>✨ FOCUSED recommendations]
        D2 --> E2[Step 5: Feature Selection<br/>actions]
    end

    %% Navigation Loop Issue
    subgraph "NAVIGATION ISSUE DIAGNOSIS"
        Issue1[User completes role-detection] --> Issue2[Navigation to improvements step]
        Issue2 --> Issue3[getRecommendations API call SUCCESS]
        Issue3 --> Issue4[❌ REDIRECT back to analysis step<br/>Navigation Loop!]
        Issue4 --> Issue1
        
        Issue4 -.-> Fix[✅ FIX: Separate role-selection step<br/>prevents automatic redirects]
    end

    %% Component Architecture
    subgraph "COMPONENT ARCHITECTURE"
        subgraph "Context Layer"
            Context[UnifiedAnalysisContext<br/>- state: UnifiedAnalysisContextState<br/>- dispatch: UnifiedAnalysisAction<br/>✨ UPDATED with role-selection step]
        end
        
        subgraph "Container Layer"
            UAC[UnifiedAnalysisContainer<br/>✨ UPDATED Step Router<br/>Handles 5-step navigation]
            RSC[RoleSelectionContainer<br/>✨ NEW - Step 3<br/>Pure role selection UI]
            ISC[ImprovementsSelectionContainer<br/>✨ MODIFIED - Step 4<br/>Focused recommendations]
        end
        
        subgraph "Component Layer"
            RDS[RoleDetectionSection<br/>Existing - Step 2]
            DRC[DetectedRoleCard<br/>Used in Step 3]
            RSM[RoleSelectionModal<br/>Used in Step 3]
            RBR[RoleBasedRecommendations<br/>Used in Step 4]
            ERC[EnhancedRecommendationCard<br/>Used in Step 4]
        end
        
        Context --> UAC
        UAC --> RSC
        UAC --> ISC
        RSC --> DRC
        RSC --> RSM
        ISC --> RBR
        ISC --> ERC
    end

    %% State Management Flow
    subgraph "STATE MANAGEMENT UPDATES"
        subgraph "Type Definitions"
            AnalysisStep["AnalysisStep (UPDATED)<br/>'analysis' | 'role-detection' |<br/>'role-selection' | 'improvements' | 'actions'"]
        end
        
        subgraph "State Structure"
            State["UnifiedAnalysisContextState (UPDATED)<br/>- jobData: Job | null<br/>- analysisResults: AnalysisResults<br/>- detectedRoles: DetectedRole[]<br/>- selectedRole: DetectedRole | null<br/>- recommendations: Recommendation[]<br/>- selectedRecommendations: string[]<br/>- currentStep: AnalysisStep<br/>✨ + roleSelectionComplete: boolean<br/>✨ + improvementsSelectionComplete: boolean"]
        end
        
        subgraph "New Actions"
            Actions["New Action Types<br/>✨ COMPLETE_ROLE_SELECTION<br/>✨ START_IMPROVEMENTS_SELECTION<br/>✨ COMPLETE_IMPROVEMENTS_SELECTION"]
        end
        
        AnalysisStep --> State
        Actions --> State
    end

    %% Data Flow & Step Progression
    subgraph "DATA FLOW & STEP PROGRESSION"
        subgraph "Step 1: Analysis"
            SF1[jobData loaded<br/>basicAnalysisResults<br/>Auto-advance to step 2]
        end
        
        subgraph "Step 2: Role Detection"
            SF2[detectedRoles generated<br/>roleAnalysis completed<br/>User advances to step 3]
        end
        
        subgraph "Step 3: Role Selection"
            SF3[User selects role<br/>selectedRole saved<br/>roleSelectionComplete = true<br/>Advance to step 4]
        end
        
        subgraph "Step 4: Improvements"
            SF4[recommendations loaded<br/>based on selectedRole<br/>User selects improvements<br/>Advance to step 5]
        end
        
        subgraph "Step 5: Actions"
            SF5[finalConfiguration<br/>ready for features<br/>Navigate to preview]
        end
        
        SF1 --> SF2 --> SF3 --> SF4 --> SF5
        
        subgraph "State Persistence"
            LocalStorage[Local Storage<br/>- currentStep<br/>- selectedRole<br/>- selectedRecommendations<br/>- form data]
            Firestore[Firestore<br/>- job state<br/>- analysis results<br/>- user preferences<br/>- role selection history]
            Memory[Memory<br/>- UI state<br/>- error states<br/>- temporary selections]
        end
        
        SF3 -.-> LocalStorage
        SF4 -.-> Firestore
        SF1 -.-> Memory
    end

    %% Premium Flow Integration
    subgraph "PREMIUM FLOW STRATEGY"
        subgraph "Step 3: Role Selection Gates"
            FreeRole[Free Users<br/>✅ 3-5 predefined roles<br/>✅ Basic role descriptions<br/>❌ Custom role creation<br/>❌ Advanced role analysis]
            PremiumRole[Premium Users<br/>✅ All detected roles<br/>✅ Detailed role insights<br/>✅ Custom role creation<br/>✅ Role editing capabilities]
        end
        
        subgraph "Step 4: Improvements Gates"
            FreeImp[Free Users<br/>✅ 5-10 generic recommendations<br/>❌ Role-specific targeting<br/>❌ Advanced improvement scoring]
            PremiumImp[Premium Users<br/>✅ 20+ targeted recommendations<br/>✅ Role-based prioritization<br/>✅ Impact predictions<br/>✅ Custom improvements]
        end
        
        FreeRole --> FreeImp
        PremiumRole --> PremiumImp
        
        subgraph "Upgrade Triggers"
            UpgradeTrigger1[Step 3: Premium role features<br/>visible but disabled]
            UpgradeTrigger2[Step 4: Premium recommendations<br/>shown with upgrade prompts]
        end
        
        FreeRole -.-> UpgradeTrigger1
        FreeImp -.-> UpgradeTrigger2
    end

    %% Error Handling & Recovery
    subgraph "ERROR HANDLING & RECOVERY STRATEGY"
        subgraph "Navigation State Recovery"
            NavError1[User refreshes on step 3<br/>No detectedRoles available] --> NavRecovery1[Auto-redirect to step 2<br/>Re-run role detection]
            NavError2[User refreshes on step 4<br/>No selectedRole available] --> NavRecovery2[Auto-redirect to step 3<br/>Re-select role]
            NavError3[User navigates back<br/>From step 4 to step 3] --> NavRecovery3[Preserve selectedRecommendations<br/>Allow role re-selection]
        end
        
        subgraph "API Failure Handling"
            APIError1[Role Detection API Timeout] --> APIRecovery1[Show fallback role options<br/>Enable manual selection<br/>Provide 'Skip' option]
            APIError2[Recommendations API Failure] --> APIRecovery2[Load cached basic recommendations<br/>Show retry button<br/>Enable offline mode]
            APIError3[Network Connectivity Issues] --> APIRecovery3[Local state preservation<br/>Offline-first approach<br/>Resume when online]
        end
        
        subgraph "Premium Gate Failures"
            PremiumError1[Subscription verification fails] --> PremiumRecovery1[Graceful degradation to free tier<br/>Clear messaging about limitations]
            PremiumError2[Payment processing errors] --> PremiumRecovery2[Clear upgrade prompts<br/>Multiple payment options<br/>Support contact info]
        end
    end

    %% Navigation Mapping Updates
    subgraph "NAVIGATION & BREADCRUMBS UPDATES"
        subgraph "CVAnalysisPage Updates"
            PageMap["mapStepToCurrentPage() UPDATES<br/>analysis → 'analysis'<br/>role-detection → 'role-detection'<br/>✨ role-selection → 'role-selection'<br/>✨ improvements → 'improvements' (updated)<br/>actions → 'feature-selection'"]
            
            PageTitles["getStepTitleAndSubtitle() UPDATES<br/>✨ role-selection:<br/>  title: 'Role Selection'<br/>  subtitle: 'Choose your target role'<br/>✨ improvements:<br/>  title: 'Improvements Selection'<br/>  subtitle: 'Select CV improvements'"]
        end
        
        subgraph "Breadcrumbs Utility Updates"
            Breadcrumb1[✨ NEW: role-selection case<br/>Upload CV → Processing → Role Detection → Role Selection*]
            Breadcrumb2[✨ UPDATED: improvements case<br/>Upload CV → Processing → Role Detection → Role Selection → Improvements*]
            Breadcrumb3[Existing: feature-selection case<br/>Upload CV → ... → Improvements → Feature Selection*]
        end
        
        PageMap --> Breadcrumb1
        PageTitles --> Breadcrumb2
        Breadcrumb1 --> Breadcrumb3
    end

    %% Component Implementation Details
    subgraph "COMPONENT IMPLEMENTATION STRATEGY"
        subgraph "RoleSelectionContainer (NEW)"
            RSCImpl["Responsibilities:<br/>✅ Pure role selection interface<br/>✅ Premium gate integration<br/>✅ Manual role creation modal<br/>✅ Progress indicator (3/5)<br/>✅ Clear navigation controls"]
            
            RSCFeatures["Key Features:<br/>✅ Grid/card layout for roles<br/>✅ Role confidence indicators<br/>✅ 'Skip' option for free users<br/>✅ Role editing for premium<br/>✅ Context-aware help text"]
        end
        
        subgraph "ImprovementsSelectionContainer (MODIFIED)"
            ISCImpl["Updated Responsibilities:<br/>✅ Role-context aware recommendations<br/>✅ Fallback to basic recommendations<br/>✅ Category-based filtering<br/>✅ Progress indicator (4/5)<br/>✅ Selection state management"]
            
            ISCFeatures["Enhanced Features:<br/>✅ Role-specific recommendation loading<br/>✅ Impact scoring visualization<br/>✅ Bulk selection controls<br/>✅ Preview of selected improvements<br/>✅ Premium upgrade prompts"]
        end
        
        RSCImpl --> RSCFeatures
        ISCImpl --> ISCFeatures
    end

    %% Testing & Validation Strategy
    subgraph "TESTING & VALIDATION STRATEGY"
        subgraph "Unit Tests (NEW/UPDATED)"
            UnitTest1[✨ RoleSelectionContainer.test.tsx<br/>- Role selection interactions<br/>- Premium gate behavior<br/>- Manual role creation]
            UnitTest2[✨ ImprovementsSelectionContainer.test.tsx<br/>- Role-based recommendation loading<br/>- Selection state management<br/>- Category filtering]
            UnitTest3[✨ unifiedAnalysisReducer.test.ts (UPDATED)<br/>- New action types<br/>- 5-step state transitions<br/>- Error state handling]
            UnitTest4[✨ breadcrumbs.test.ts (UPDATED)<br/>- New navigation cases<br/>- Step mapping validation<br/>- Dynamic breadcrumb generation]
        end
        
        subgraph "Integration Tests (CRITICAL)"
            IntTest1[✅ Complete 5-step user flow<br/>Happy path validation]
            IntTest2[✅ Navigation loop prevention<br/>Critical fix validation]
            IntTest3[✅ Premium vs free user flows<br/>Feature gate testing]
            IntTest4[✅ Error recovery scenarios<br/>State restoration testing]
            IntTest5[✅ API failure handling<br/>Graceful degradation]
        end
        
        subgraph "E2E Tests (COMPREHENSIVE)"
            E2ETest1[✅ Full user journey validation<br/>Upload → Feature Selection]
            E2ETest2[✅ Premium upgrade flow<br/>Mid-process subscription]
            E2ETest3[✅ Browser refresh recovery<br/>State persistence validation]
            E2ETest4[✅ Mobile navigation flow<br/>Responsive design validation]
            E2ETest5[✅ Performance benchmarking<br/>Step transition timing]
        end
        
        UnitTest1 --> IntTest1 --> E2ETest1
        UnitTest2 --> IntTest2 --> E2ETest2
        UnitTest3 --> IntTest3 --> E2ETest3
        UnitTest4 --> IntTest4 --> E2ETest4
        UnitTest5 --> IntTest5 --> E2ETest5
    end

    %% Implementation Timeline
    subgraph "IMPLEMENTATION PHASES & TIMELINE"
        subgraph "Phase 1: Foundation (Week 1)"
            P1T1[✅ Update TypeScript definitions<br/>AnalysisStep type extension]
            P1T2[✅ Update state management<br/>Reducer and action updates]
            P1T3[✅ Update navigation mapping<br/>CVAnalysisPage modifications]
            P1T4[✅ Create RoleSelectionContainer<br/>Basic component structure]
        end
        
        subgraph "Phase 2: Core Implementation (Week 2)"
            P2T1[✅ Implement ImprovementsSelectionContainer<br/>Modified component logic]
            P2T2[✅ Update UnifiedAnalysisContainer<br/>5-step navigation router]
            P2T3[✅ Fix navigation loop issues<br/>Critical bug resolution]
            P2T4[✅ Add comprehensive error handling<br/>Recovery mechanisms]
        end
        
        subgraph "Phase 3: Premium Integration (Week 3)"
            P3T1[✅ Integrate premium gates<br/>Step 3 & 4 monetization]
            P3T2[✅ Implement role-based recommendations<br/>Context-aware suggestions]
            P3T3[✅ Add customization features<br/>Premium role editing]
            P3T4[✅ Test premium vs free flows<br/>Feature gate validation]
        end
        
        subgraph "Phase 4: Testing & Polish (Week 4)"
            P4T1[✅ Comprehensive test suite<br/>Unit + Integration + E2E]
            P4T2[✅ Performance optimization<br/>Bundle size and load times]
            P4T3[✅ UI/UX refinements<br/>Design polish and accessibility]
            P4T4[✅ Documentation & deployment<br/>Migration guide and rollout]
        end
        
        P1T4 --> P2T1
        P2T4 --> P3T1
        P3T4 --> P4T1
        
        subgraph "Risk Mitigation"
            Risk1[High: Navigation complexity<br/>→ Feature flag rollout]
            Risk2[High: Premium gate integration<br/>→ Staged rollout with fallbacks]
            Risk3[Medium: API integration complexity<br/>→ Comprehensive testing]
            Risk4[Low: Component development<br/>→ Existing pattern reuse]
        end
    end

    %% Success Metrics & KPIs
    subgraph "SUCCESS METRICS & VALIDATION"
        subgraph "Technical KPIs"
            Tech1[✅ Zero navigation loops<br/>Critical issue resolution]
            Tech2[✅ <2s step transition time<br/>Performance benchmark]
            Tech3[✅ 100% test coverage<br/>Quality assurance]
            Tech4[✅ No regression in functionality<br/>Backward compatibility]
            Tech5[✅ Mobile responsiveness<br/>Cross-platform support]
        end
        
        subgraph "User Experience KPIs"
            UX1[✅ Clear step progression<br/>User testing validation]
            UX2[✅ Reduced cognitive load<br/>A/B testing comparison]
            UX3[✅ Improved completion rates<br/>Analytics measurement]
            UX4[✅ Higher engagement metrics<br/>Time-on-page tracking]
            UX5[✅ Reduced confusion reports<br/>Support ticket analysis]
        end
        
        subgraph "Business KPIs"
            Biz1[✅ Increased premium conversion<br/>Role selection upgrade prompts]
            Biz2[✅ Higher feature adoption<br/>Improvements selection rates]
            Biz3[✅ Reduced support burden<br/>Navigation-related tickets]
            Biz4[✅ Improved user satisfaction<br/>Survey scores and retention]
            Biz5[✅ Better feature discovery<br/>Step-by-step engagement]
        end
    end

    %% Styling
    classDef currentFlow fill:#fee2e2,stroke:#dc2626,stroke-width:2px
    classDef newFlow fill:#dcfce7,stroke:#16a34a,stroke-width:2px
    classDef issue fill:#fef3c7,stroke:#d97706,stroke-width:2px
    classDef fix fill:#dbeafe,stroke:#2563eb,stroke-width:2px
    classDef new fill:#f3e8ff,stroke:#9333ea,stroke-width:2px
    classDef updated fill:#fef2f2,stroke:#ef4444,stroke-width:2px
    classDef premium fill:#f0f9ff,stroke:#0284c7,stroke-width:2px
    classDef testing fill:#f7fee7,stroke:#65a30d,stroke-width:2px

    class A1,B1,C1,D1 currentFlow
    class A2,B2,C2,D2,E2 newFlow
    class Issue1,Issue2,Issue3,Issue4 issue
    class Fix fix
    class RSC,ISC,UnitTest1,UnitTest2,P1T4,P2T1,C2,D2 new
    class Context,UAC,PageMap,PageTitles,UnitTest3,UnitTest4,State,Actions updated
    class FreeRole,PremiumRole,FreeImp,PremiumImp premium
    class IntTest1,IntTest2,E2ETest1,P4T1 testing