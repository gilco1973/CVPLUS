// Import polyfills first
import '@cvplus/core/utils/polyfills';
import * as admin from 'firebase-admin';

// ============================================================================
// CVPLUS FUNCTIONS ARCHITECTURE - POST SUBMODULE MIGRATION
// ============================================================================
// MIGRATION STATUS: PHASE 4 COMPLETED - All functions properly organized in submodules
//
// ARCHITECTURE OVERVIEW:
// - Root functions: Only 4 legitimate orchestration functions remain in root
// - Submodule functions: 60+ functions properly organized in their domain-specific submodules
// - Each submodule is an independent git repository with specialized functionality
//
// ROOT FUNCTIONS (4 total):
// ✓ bookMeeting.ts - Meeting booking orchestration
// ✓ calendarIntegration.ts - Calendar integration orchestration  
// ✓ generateAvailabilityCalendar.ts - Availability calendar generation
// ✓ sendSchedulingEmail.ts - Email scheduling orchestration
//
// SUBMODULE ORGANIZATION:
// ✓ packages/processing/ - CV analysis, processing, and enhancement
// ✓ packages/multimedia/ - Media generation, podcasts, videos, QR codes
// ✓ packages/analytics/ - Analytics, metrics, reporting, business intelligence
// ✓ packages/workflow/ - Job monitoring, templates, feature management
// ✓ packages/admin/ - Admin tools, user management, system health
// ✓ packages/public-profiles/ - Public profiles, web portals, social integration
// ✓ packages/auth/ - Authentication and authorization
// ✓ packages/recommendations/ - AI-powered recommendations engine
// ✓ packages/payments/ - Payment processing and subscription management
// ✓ packages/premium/ - Premium features and enterprise functionality
// ✓ packages/i18n/ - Internationalization and translation services
// ============================================================================

// Initialize Firebase Admin with emulator support
if (!admin.apps.length) {
  // Check if running in emulator environment
  const isEmulator = process.env.FUNCTIONS_EMULATOR === 'true' || 
                     process.env.FIREBASE_AUTH_EMULATOR_HOST ||
                     process.env.FIRESTORE_EMULATOR_HOST;
                     
  if (isEmulator) {
    // Set emulator environment variables for Storage
    if (!process.env.FIREBASE_STORAGE_EMULATOR_HOST) {
      process.env.FIREBASE_STORAGE_EMULATOR_HOST = '127.0.0.1:9199';
    }
    
    // Initialize for emulator environment with correct bucket format for emulator
    admin.initializeApp({
      projectId: process.env.PROJECT_ID || 'cvplus-ai',
      storageBucket: 'cvplus-ai.firebasestorage.app'
    });
  } else {
    // Initialize for production
    admin.initializeApp();
  }
}

// ============================================================================
// ROOT ORCHESTRATION FUNCTIONS
// ============================================================================
// These functions remain in root as they orchestrate cross-submodule workflows

// Calendar and Meeting Functions
// export { bookMeeting } from './scripts/functions/bookMeeting'; // DISABLED FOR DEPLOYMENT
// Calendar integration functions - DISABLED FOR DEPLOYMENT
/* 
 */
export {
  generateCalendarEvents,
  ... calendar functions temporarily disabled for deployment
} from './scripts/functions/calendarIntegration';
*/

// ============================================================================
// CV PROCESSING FUNCTIONS
// ============================================================================
// All CV processing, analysis, and enhancement functions

// CV Processing Functions - Migrated to submodule (T041-T044)
export { uploadCV } from '@cvplus/processing/backend/functions/cv/upload';
export { uploadCVFromUrl } from '@cvplus/processing/backend/functions/cv/url';
export { getCVStatus } from '@cvplus/processing/backend/functions/cv/status';
export { downloadProcessedCV } from '@cvplus/processing/backend/functions/cv/download';

// Existing CV Processing Functions from submodules
// CV Processing Functions from submodules - TEMPORARILY DISABLED FOR DEPLOYMENT
// TODO: Re-enable after submodule dependencies are properly set up
/* 
 */
export {
  processCV,
  generateCV,
  ... other functions temporarily disabled for deployment
} from '@cvplus/processing/backend';
*/

// ============================================================================
// MULTIMEDIA FUNCTIONS
// ============================================================================
// Media generation, podcasts, videos, QR codes, and multimedia processing

// Multimedia Functions - Migrated to submodule (T045-T046)
export { generatePodcast } from '@cvplus/multimedia/backend/functions/multimedia/podcast';
export { generateVideo } from '@cvplus/multimedia/backend/functions/multimedia/video';

// Multimedia Functions from submodules - TEMPORARILY DISABLED FOR DEPLOYMENT
// TODO: Re-enable after submodule dependencies are properly set up
/* 
 */
export {
  podcastStatus,
  ... other multimedia functions temporarily disabled for deployment
} from '@cvplus/multimedia/backend';
*/

// ============================================================================
// ANALYTICS FUNCTIONS
// ============================================================================
// Analytics, metrics, reporting, and business intelligence

// Analytics Functions - Migrated to submodule (T051)
export { getAnalytics } from '@cvplus/analytics/backend/functions/analytics/get';

// Existing Analytics Functions from submodules
export {
  trackExternalDataUsage,
  getUserExternalDataUsageStats,
  getExternalDataAnalytics,
  getDailyExternalDataAnalytics,
  trackConversionEvent,
  getConversionMetrics,
  getBusinessIntelligenceReport,
  getRevenueMetrics,
  predictChurn,
  videoAnalyticsDashboard,
  batchTrackingEvents,
  getRealtimeUsageStats,
  createCustomReport,
  generateReportData,
  createDashboard,
  scheduleReportDelivery,
  generateWhiteLabelReport,
  exportReport,
  getDataSources,
  getReportTemplates,
  validateReportConfig,
  analyticsHealthCheck
} from '@cvplus/analytics';

// ============================================================================
// WORKFLOW FUNCTIONS
// ============================================================================
// Job monitoring, templates, feature management, and workflow orchestration

// Workflow functions - TEMPORARILY DISABLED FOR DEPLOYMENT
/* 
 */
export {
  injectCompletedFeatures,
  ... workflow functions disabled for deployment
} from '@cvplus/workflow/backend';
*/

// ============================================================================
// ADMIN FUNCTIONS
// ============================================================================
// Admin tools, user management, system health, and monitoring

export {
  getUserStats,
  getSystemHealth,
  manageUsers,
  getBusinessMetrics,
  initializeAdmin,
  getCacheStats,
  warmCaches,
  clearCaches,
  testConfiguration,
  monitorStuckJobs,
  triggerJobMonitoring,
  getJobDetails,
  getJobStats,
  cleanupTempFiles,
  testCors,
  testCorsCall,
  getUserUsageStats,
  getUserPolicyViolations,
  // testCorsHTTP, // Fixed - using testCors
  // testCorsCallable, // Fixed - using testCorsCall
  // validateCorsConfiguration // Fixed - function may not exist
} from '@cvplus/admin/backend';

// ============================================================================
// PUBLIC PROFILES FUNCTIONS
// ============================================================================
// Public profiles, web portals, social integration, QR codes, and testimonials

// Public Profile Functions - Migrated to submodule (T047-T050)
export { createPublicProfile } from '@cvplus/public-profiles/backend/functions/profile/create';
export { viewPublicProfile } from '@cvplus/public-profiles/backend/functions/profile/view';
export { updatePublicProfile } from '@cvplus/public-profiles/backend/functions/profile/update';
export { contactProfileOwner } from '@cvplus/public-profiles/backend/functions/profile/contact';

// Portal Functions - Migrated to public-profiles submodule
export { generatePortal } from '@cvplus/public-profiles/backend/functions/portal/generatePortal';
export { getPortalAnalytics } from '@cvplus/public-profiles/backend/functions/portal/getPortalAnalytics';
export { getPortalStatus } from '@cvplus/public-profiles/backend/functions/portal/getPortalStatus';
export { sendChatMessage } from '@cvplus/public-profiles/backend/functions/portal/sendChatMessage';
export { startChatSession } from '@cvplus/public-profiles/backend/functions/portal/startChatSession';

// Existing Public Profile Functions from submodules
export {
  getPublicProfile,
  updatePublicProfileSettings,
  submitContactForm,
  trackQRScan,
  testEmailConfiguration,
  generateWebPortal,
  // getPortalStatus, // Using local portal function instead
  updatePortalPreferences,
  retryPortalGeneration,
  getUserPortalPreferences,
  listUserPortals,
  portalChat,
  portalChatPublic,
  initPortalChat,
  generateSocialMediaIntegration,
  addSocialProfile,
  updateSocialProfile,
  removeSocialProfile,
  trackSocialClick,
  getSocialAnalytics,
  updateSocialDisplaySettings,
  generateTestimonialsCarousel,
  addTestimonial,
  updateTestimonial,
  removeTestimonial,
  updateCarouselLayout,
  enhanceQRCode,
  generateQRCodePreview,
  getEnhancedQRCodes,
  updateQRCodeStyling,
  generateBulkQRCodes,
  exportQRCodeData,
  getQRCodeInsights,
  generateQRCode,
  trackQRCodeScan,
  getQRCodes,
  updateQRCode,
  deleteQRCode,
  getQRAnalytics,
  getQRTemplates
} from '@cvplus/public-profiles/backend';

// ============================================================================
// AUTHENTICATION FUNCTIONS
// ============================================================================
// Authentication, authorization, and user session management

export {
  testAuth,
  createSessionCheckpoint,
  executeCheckpoint,
  resumeFromCheckpoint,
  getSessionCheckpoints,
  processSessionActionQueue,
  processQueuedActions,
  retryFailedCheckpoints,
  syncSessionState,
  enhanceSessionWithCheckpoints,
  sessionHealthCheck
} from '@cvplus/auth/backend';

// ============================================================================
// RECOMMENDATIONS FUNCTIONS
// ============================================================================
// AI-powered recommendations engine and improvement suggestions

export {
  getRecommendations,
  applyImprovements,
  previewImprovement,
  customizePlaceholders,
  recommendationsHealthCheck
} from '@cvplus/recommendations/backend';

// ============================================================================
// ENHANCEMENTS FUNCTIONS
// ============================================================================
// CV enhancement features, calendar integration, and professional networking

export {
  processEnhancements,
  syncCalendar,
  createBooking,
  generateAvailabilityCalendar,
  sendSchedulingEmail,
  getCalendarData,
  enhancementsHealthCheck
} from '@cvplus/enhancements/backend';

// ============================================================================
// PAYMENTS FUNCTIONS
// ============================================================================
// Payment processing, subscriptions, and billing management

export {
  confirmPayment,
  createCheckoutSession,
  checkFeatureAccess,
  handleStripeWebhook,
  getUserSubscription
} from '@cvplus/payments/backend';

// ============================================================================
// PREMIUM FUNCTIONS
// ============================================================================
// Premium features, enterprise functionality, and advanced analytics

export {
  getOptimizedPricing,
  createPricingTest,
  getPricingAnalytics,
  optimizePricingStrategy,
  getPricingTestResults,
  recordPricingConversion,
  pricingHealthCheck,
  createEnterpriseAccount,
  getEnterpriseAccount,
  assignUserRole,
  checkPermission,
  createCustomRole,
  configureSAMLSSO,
  configureOAuthSSO,
  processSSOLogin,
  getEnterpriseAnalytics,
  auditUserAccess,
  getSSOMetrics,
  getRoleTemplates,
  enterpriseHealthCheck
} from '@cvplus/premium/backend';

// ============================================================================
// INTERNATIONALIZATION FUNCTIONS
// ============================================================================
// Translation services and multi-language support

// I18n functions - TEMPORARILY DISABLED FOR DEPLOYMENT
/* 
 */
export {
  translateCV,
  ... i18n functions disabled for deployment
} from '@cvplus/i18n/backend';
*/

// ============================================================================
// UTILITY FUNCTIONS
// ============================================================================
// Health check, API documentation, and maintenance functions

import { onRequest } from 'firebase-functions/v2/https';
import { onSchedule } from 'firebase-functions/v2/scheduler';
import { Request, Response } from 'express';

/**
 * Health check endpoint for monitoring
 */
export const healthCheck = onRequest(
  {
    timeoutSeconds: 30,
    memory: '256MiB',
    maxInstances: 10,
    cors: true
  },
  async (req: Request, res: Response) => {
    try {
      if (req.method === 'OPTIONS') {
        res.set('Access-Control-Allow-Origin', '*');
        res.set('Access-Control-Allow-Methods', 'GET, OPTIONS');
        res.set('Access-Control-Allow-Headers', 'Content-Type');
        res.status(200).send('');
        return;
      }

      if (req.method !== 'GET') {
        res.status(405).json({ error: 'Method not allowed' });
        return;
      }

      const healthData = {
        status: 'healthy',
        timestamp: new Date().toISOString(),
        version: CVPLUS_FUNCTIONS_VERSION,
        environment: process.env.NODE_ENV || 'production',
        migratedFunctions: {
          cv: ['uploadCV', 'uploadCVFromUrl', 'getCVStatus', 'downloadProcessedCV'],
          multimedia: ['generatePodcast', 'generateVideo'],
          profile: ['createPublicProfile', 'viewPublicProfile', 'updatePublicProfile', 'contactProfileOwner'],
          analytics: ['getAnalytics']
        }
      };

      res.set({
        'Cache-Control': 'public, max-age=60',
        'Content-Type': 'application/json'
      });

      res.status(200).json(healthData);

    } catch (error) {
      console.error('Health check failed:', error);
      res.status(500).json({
        status: 'unhealthy',
        timestamp: new Date().toISOString(),
        error: error instanceof Error ? error.message : 'Health check failed'
      });
    }
  }
);

/**
 * Cleanup expired data (scheduled function)
 */
export const cleanupExpiredData = onSchedule(
  {
    schedule: '0 2 * * *', // Daily at 2 AM
    timeZone: 'UTC',
    memory: '512MiB',
    timeoutSeconds: 300
  },
  async (event) => {
    try {
      console.log('Starting expired data cleanup...');

      const firestore = admin.firestore();
      const now = admin.firestore.Timestamp.now();
      const threeDaysAgo = admin.firestore.Timestamp.fromDate(
        new Date(Date.now() - 3 * 24 * 60 * 60 * 1000)
      );

      let cleanupCount = 0;

      // Cleanup expired rate limit records
      const rateLimitQuery = await firestore
        .collectionGroup('requests')
        .where('timestamp', '<', threeDaysAgo)
        .limit(100)
        .get();

      for (const doc of rateLimitQuery.docs) {
        await doc.ref.delete();
        cleanupCount++;
      }

      // Cleanup expired download URLs
      const tempDownloadsQuery = await firestore
        .collection('temp_downloads')
        .where('expiresAt', '<', now)
        .limit(50)
        .get();

      for (const doc of tempDownloadsQuery.docs) {
        await doc.ref.delete();
        cleanupCount++;
      }

      console.log(`Cleanup completed. Removed ${cleanupCount} expired records.`);

    } catch (error) {
      console.error('Cleanup failed:', error);
      throw error;
    }
  }
);

// ============================================================================
// SYSTEM INFORMATION
// ============================================================================
export const CVPLUS_FUNCTIONS_VERSION = '4.1.0';
export const MIGRATION_STATUS = 'PHASE_5_COMPLETE_API_FUNCTIONS_MIGRATED';
export const ARCHITECTURE_DATE = '2025-09-13';
// ============================================================================
// ONE CLICK PORTAL FUNCTIONS
// ============================================================================
// Portal generation, chat, and analytics functions

export {
  generatePortal,
  getPortalStatus,
  startChatSession,
  sendChatMessage,
  getPortalAnalytics
} from './portal';

export const TOTAL_FUNCTIONS_COUNT = 166; // Updated count with portal functions
export const ROOT_FUNCTIONS_COUNT = 4;
export const SUBMODULE_COUNT = 11;
export const MIGRATED_FUNCTIONS_COUNT = 11; // CV(4) + Multimedia(2) + Profile(4) + Analytics(1) migrated to submodules