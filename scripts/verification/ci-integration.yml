# GitHub Actions workflow for automated integrity verification
name: Specification Integrity Verification

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'specs/**'
      - 'packages/**'
      - 'functions/**'
      - 'frontend/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'specs/**'
      - 'packages/**'
      - 'functions/**'
      - 'frontend/**'
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      mode:
        description: 'Verification mode'
        required: false
        default: 'full'
        type: choice
        options:
          - full
          - quick
          - contracts-only
          - entities-only
      cache:
        description: 'Enable caching'
        required: false
        default: true
        type: boolean

jobs:
  integrity-verification:
    name: Verify Specification Integrity
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install ripgrep
      run: |
        sudo apt-get update
        sudo apt-get install -y ripgrep

    - name: Cache verification results
      uses: actions/cache@v4
      if: ${{ inputs.cache != false }}
      with:
        path: .cache/verification
        key: verification-cache-${{ github.sha }}
        restore-keys: |
          verification-cache-

    - name: Install verification system dependencies
      run: |
        cd scripts/verification
        npm install
        npm run build

    - name: Run integrity verification
      run: |
        ./scripts/verification/verify-integrity.sh run ${{ inputs.mode || 'full' }} ${{ inputs.cache || 'true' }}

    - name: Upload verification report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: integrity-verification-report
        path: |
          integrity-verification-automated.md
          .cache/verification/integrity-verification.json
        retention-days: 30

    - name: Comment PR with results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');

          try {
            const reportPath = 'integrity-verification-automated.md';
            if (fs.existsSync(reportPath)) {
              const report = fs.readFileSync(reportPath, 'utf8');

              // Extract summary from report
              const summaryMatch = report.match(/## Executive Summary\n\n(.*?)\n\n/s);
              const summary = summaryMatch ? summaryMatch[1] : 'Report generated successfully';

              const comment = `## üîç Specification Integrity Verification

${summary}

üìÑ **Full Report**: Check the uploaded artifact for detailed analysis.
üéØ **Verification Mode**: ${{ inputs.mode || 'full' }}
‚ö° **Cache Enabled**: ${{ inputs.cache || 'true' }}

_This verification ensures all specifications align with actual implementation._`;

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
          } catch (error) {
            console.error('Failed to post comment:', error);
          }

    - name: Check compliance threshold
      run: |
        # Extract compliance score and fail if below threshold
        if [ -f "integrity-verification-automated.md" ]; then
          compliance=$(grep -oP 'Average compliance: \K\d+(\.\d+)?' integrity-verification-automated.md || echo "0")
          threshold=85

          echo "Compliance: ${compliance}% | Threshold: ${threshold}%"

          if (( $(echo "$compliance < $threshold" | bc -l) )); then
            echo "‚ùå Compliance ${compliance}% is below threshold ${threshold}%"
            exit 1
          else
            echo "‚úÖ Compliance ${compliance}% meets threshold ${threshold}%"
          fi
        else
          echo "‚ùå No verification report found"
          exit 1
        fi

  # Optional: Deploy results to GitHub Pages
  deploy-results:
    if: github.ref == 'refs/heads/main'
    needs: integrity-verification
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write

    steps:
    - name: Download verification artifacts
      uses: actions/download-artifact@v4
      with:
        name: integrity-verification-report

    - name: Create GitHub Pages content
      run: |
        mkdir -p public
        cp integrity-verification-automated.md public/index.md

        # Convert markdown to HTML for better presentation
        cat > public/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
          <title>CVPlus Specification Integrity Report</title>
          <meta charset="utf-8">
          <style>
            body { font-family: -apple-system, sans-serif; max-width: 1200px; margin: 0 auto; padding: 20px; }
            .compliance-high { color: #28a745; }
            .compliance-medium { color: #ffc107; }
            .compliance-low { color: #dc3545; }
            .status-complete { color: #28a745; }
            .status-partial { color: #ffc107; }
            .status-error { color: #dc3545; }
          </style>
        </head>
        <body>
          <div id="content"></div>
          <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
          <script>
            fetch('index.md')
              .then(response => response.text())
              .then(text => {
                document.getElementById('content').innerHTML = marked.parse(text);
              });
          </script>
        </body>
        </html>
        EOF

    - name: Deploy to GitHub Pages
      uses: actions/deploy-pages@v4
      with:
        artifact_name: github-pages
        artifact_path: public/